<?php
use Zend\Form\Element;
use Zend\Form\Form;

$id = md5(uniqid());
$formElement = new Element\Text('band');
$formElement
    ->setLabel("<a class=\"btn btn-success\" onClick=\"$('<span class=modal></span>').appendTo('body').load('/band/create').modal(); return false;\" href='#' title=\"Create Band\"><i class=\"icon-cogs\"></i> " . $this->label . "</a>")
    ->setAttributes(array(
        'id' => $id,
        'autocomplete' => 'off',
        'placeholder'  => 'Search Bands',
    ));

if ($band) {
    $formElement->setAttributes(array(
        'value' => $band->getName(),
    ));
}

?>

<?= $this->formRow($formElement); ?>

<input type="hidden" name="band_id" <?php if ($band) echo 'value="' . $band->getId() . '"'; ?> id="Id<?= $id; ?>"/>

<script>
var bands<?= $id; ?> = {};
var bandLabels<?= $id; ?> = [];

require(['modernizr.min', 'bootstrap.min', 'datemask', 'underscore-min'], function() {

    $('#<?= $id; ?>').typeahead({
        source: function ( query, process ) {
            $('#Id<?= $id; ?>').val('');
            searchBands<?= $id; ?>( query, process );
        }
        , updater: function (item) {
            //save the id value into the hidden field
            $( "#Id<?= $id; ?>" ).val( bands<?= $id; ?>[ item ] );

            //return the string you want to go into the textbox (e.g. name)
            return item;
        }
        , matcher: function () { return true; }
    });

    var searchBands<?= $id; ?> = _.debounce(function ( query, process ) {

        //the "process" argument is a callback, expecting an array of values (strings) to display

        //get the data to populate the typeahead (plus some)
        //from your api, wherever that may be
        $.get('/band/search-json', { q: query }, function ( data ) {

            //reset these containers
            bands<?= $id; ?> = {};
            bandLabels<?= $id; ?> = [];

            //for each item returned, if the display name is already included
            //(e.g. multiple "John Smith" records) then add a unique value to the end
            //so that the user can tell them apart. Using underscore.js for a functional approach.
            _.each( data.bands, function( item, ix, list ){

                if ( _.contains( bands<?= $id; ?>, item.label ) ){
                    item.label = item.label + ' #' + item.value;
                }

                //add the label to the display array
                bandLabels<?= $id; ?>.push( item.label );

                //also store a mapping to get from label back to ID
                bands<?= $id; ?>[ item.label ] = item.value;
            });

            //return the display array
            process( bandLabels<?= $id; ?> );
        });
    }, 300);

});
</script>